apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: AchOperations
  links:
    - url: https://github.com/LuisCeballos24/api-backstage
      title: Source Code
      icon: github
    - url: https://test.api.ob.banesco.com.pa
      title: Production
      icon: globe
spec:
  type: openapi
  lifecycle: production
  owner: user:LuisCeballos24
  system: cash-management
  dependsOn: ['resource:heroes-db']
  apiConsumedBy: ['component:www-heroes']
  definition: |
    openapi: 3.0.3
    info:
      title: Ach Operations
      description: Ach Operations
      version: 3.0.0
    servers:
      - url: 'https://test.api.ob.banesco.com.pa/Payments/ACHOperations/3.0.0/'
    paths:
      /v3/BeneficiaryEntry/Initiate:
        post:
          tags:
            - BeneficiaryEntry
          summary: Initiate BeneficiaryEntry
          description: Operación de dominio encargada de insertar los datos de una persona jurídica.
          operationId: InitiateBeneficiaryEntry
          parameters:
            - $ref: '#/components/parameters/ClientDt'
            - $ref: '#/components/parameters/RequestId'
            - $ref: '#/components/parameters/ClientApp-ChannelId'
            - $ref: '#/components/parameters/ClientApp-Name'
            - $ref: '#/components/parameters/ClientApp-UserId'
            - $ref: '#/components/parameters/X-API-Key'
    
          requestBody:
            $ref: '#/components/requestBodies/InitiateBeneficiaryEntryRq'
    
          responses:
           '200':
              $ref: '#/components/responses/InitiateBeneficiaryEntryRs'
           '400':
              $ref: '#/components/responses/badRequest'
           '401':
              $ref: '#/components/responses/unauthorized'
           '403':
              $ref: '#/components/responses/forbidden'
           '404':
              $ref: '#/components/responses/notFound'
           '408':
              $ref: '#/components/responses/timeOut'
           '500':
              $ref: '#/components/responses/internalServerError'
    
    
      /v3/BeneficiaryEntry/Update:
        patch:
          tags:
            - BeneficiaryEntry
          summary: Update BeneficiaryEntry
          description: Operación de Dominio encargada de actualizar los datos de una persona jurídica.
          operationId: UpdateBeneficiaryEntry
          parameters:
            - $ref: '#/components/parameters/ClientDt'
            - $ref: '#/components/parameters/RequestId'
            - $ref: '#/components/parameters/ClientApp-ChannelId'
            - $ref: '#/components/parameters/ClientApp-Name'
            - $ref: '#/components/parameters/ClientApp-UserId'
            - $ref: '#/components/parameters/X-API-Key'
    
          requestBody:
            $ref: '#/components/requestBodies/UpdateBeneficiaryEntryRq'
    
          responses:
           '200':
              $ref: '#/components/responses/UpdateBeneficiaryEntryRs'
           '400':
              $ref: '#/components/responses/badRequest'
           '401':
              $ref: '#/components/responses/unauthorized'
           '403':
              $ref: '#/components/responses/forbidden'
           '404':
              $ref: '#/components/responses/notFound'
           '408':
              $ref: '#/components/responses/timeOut'
           '500':
              $ref: '#/components/responses/internalServerError'
    
    
    components:
      parameters:
        ### Headers ###
        ClientDt:
          name: ClientDt
          in: header
          schema:
            type: string
          required: true
        RequestId:
          name: RequestId
          in: header
          schema:
            type: string
          required: true
        ClientApp-ChannelId:
          name: ClientApp-ChannelId
          in: header
          schema:
            type: string
          required: true
        ClientApp-Name:
          name: ClientApp-Name
          in: header
          schema:
            type: string
          required: true
        ClientApp-UserId:
          name: ClientApp-UserId
          in: header
          schema:
            type: string
          required: true
        X-API-Key:
          name: X-API-Key
          in: header
          schema:
            type: string
          required: true
        ### Headers ###
    
      schemas:
        ### Request ###
        InitiateBeneficiaryEntryRq:
          $ref: './Operations/InitiateBeneficiaryEntry/InitiateBeneficiaryEntryRq.yaml'
        UpdateBeneficiaryEntryRq:
          $ref: './Operations/UpdateBeneficiaryEntry/UpdateBeneficiaryEntryRq.yaml'
        ### Request ###
    
        ### Response ###
        InitiateBeneficiaryEntryRs:
          $ref: './Operations/InitiateBeneficiaryEntry/InitiateBeneficiaryEntryRs.yaml'
        UpdateBeneficiaryEntryRs:
          $ref: './Operations/UpdateBeneficiaryEntry/UpdateBeneficiaryEntryRs.yaml'
        ### Http Response ###
        httpResponse:
          $ref: '../../commons/HttpResponses/HttpError.yaml'
        ### Http Response ###
    
        ### Response ###
    
    
      ### Define Relation with  Request ###
      requestBodies:
        ### Artefacts Request ###
        InitiateBeneficiaryEntryRq:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateBeneficiaryEntryRq'
              example:
                BeneficiaryEntry:
                  PayeeBankReference:
                    bankName: "Nombre del banco del beneficiario"
                    referenceId: "ID de referencia del banco del beneficiario"
                  PayeeProductReference:
                    PaymentCard:
                      BankIdentificationNumber:
                        Identifier:
                          identifierValue: "Valor de identificación del banco"
                    referenceId: "ID de referencia del producto del beneficiario"
                  PayeeReference:
                    ContactPoint:
                    - contactPointValue: "Valor de punto de contacto 1"
                    - contactPointValue: "Valor de punto de contacto 2"
                    Person:
                      PersonName:
                      - personName: "Nombre del beneficiario 1"
                      - personName: "Nombre del beneficiario 2"
                      PersonProfile:
                        economicActivity: "Actividad económica del beneficiario"
                    beneficiaryType: "Tipo de beneficiario"
                    referenceId: "ID de referencia del beneficiario"
                    relationshipType: "Tipo de relación"
                  PaymentCard:
                    cardNumber: "Número de tarjeta de pago"
                  currency: "Moneda"
                  paymentTransactionType: "Tipo de transacción de pago"
                
        
        UpdateBeneficiaryEntryRq:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBeneficiaryEntryRq'
              example:
                BeneficiaryEntry:
                  PayeeBankReference:
                    bankName: "Nombre del banco del beneficiario"
                    referenceId: "ID de referencia del banco del beneficiario"
                  PayeeProductReference:
                    PaymentCard:
                      BankIdentificationNumber:
                        Identifier:
                          identifierValue: "Valor de identificación del banco"
                    referenceId: "ID de referencia del producto del beneficiario"
                  PayeeReference:
                    ContactPoint:
                    - contactPointValue: "Valor de punto de contacto 1"
                    - contactPointValue: "Valor de punto de contacto 2"
                    Person:
                      PersonName:
                      - personName: "Nombre del beneficiario 1"
                      - personName: "Nombre del beneficiario 2"
                      PersonProfile:
                        economicActivity: "Actividad económica del beneficiario"
                    beneficiaryType: "Tipo de beneficiario"
                    referenceId: "ID de referencia del beneficiario"
                    relationshipType: "Tipo de relación"
                  PaymentCard:
                    cardNumber: "Número de tarjeta de pago"
                  currency: "Moneda"
                  paymentTransactionType: "Tipo de transacción de pago"
                
        
        ### Artefacts Request ###
      ### Define Relation with  Request ###
    
    
    
      ### Define Relation with  Response ###
      responses:
        ### Artefacts Response ###
        InitiateBeneficiaryEntryRs:
          description: InitiateBeneficiaryEntryRs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateBeneficiaryEntryRs'
              example:
                BeneficiaryEntry:
                  referenceId: "string"
                
        
        UpdateBeneficiaryEntryRs:
          description: UpdateBeneficiaryEntryRs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBeneficiaryEntryRs'
              example:
                BeneficiaryEntry:
                  referenceId: "string"
                
        
        ### Artefacts Responses ###
    
        ### Https Responses ###
        badRequest:
          description: badRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponse'
              example:
                message: "Bad Request"
                status: "FAILED"
                statusCode: "400"
                
        
        unauthorized:
          description: unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponse'
              example:
                message: "Unauthorized"
                status: "FAILED"
                statusCode: "401"
                
        
        forbidden:
          description: forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponse'
              example:
                message: "Forbidden"
                status: "FAILED"
                statusCode: "403"
                
        
        notFound:
          description: notFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponse'
              example:
                message: "Not Found"
                status: "FAILED"
                statusCode: "404"
                
        
        timeOut:
          description: timeOut
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponse'
              example:
                message: "Time Out"
                status: "FAILED"
                statusCode: "408"
                
        
        internalServerError:
          description: internalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/httpResponse'
              example:
                message: "Internal Server Error"
                status: "FAILED"
                statusCode: "500"
                
        
        ### Https Responses ###
      ### Define Relation with  Response ###

